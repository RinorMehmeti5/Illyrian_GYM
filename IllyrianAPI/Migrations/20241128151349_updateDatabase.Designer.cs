// <auto-generated />
using System;
using IllyrianAPI.Data.General;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IllyrianAPI.Migrations
{
    [DbContext(typeof(IllyrianContext))]
    [Migration("20241128151349_updateDatabase")]
    partial class updateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AspNetUserRoles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetUserRoles_RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.AspNetRoleClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetRoleClaims_RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.AspNetRoles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("Name_EN");

                    b.Property<string>("NameSq")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("Name_SQ");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedName" }, "RoleNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedName] IS NOT NULL)");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.AspNetUserClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserClaims_UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.AspNetUserLogins", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserLogins_UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.AspNetUserTokens", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.AspNetUsers", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AllowAdminNotification")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowNotifications")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityID");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertedFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("LanguageID");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("PasswordExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SettlementId")
                        .HasColumnType("int")
                        .HasColumnName("SettlementID");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex(new[] { "NormalizedEmail" }, "EmailIndex");

                    b.HasIndex(new[] { "NormalizedUserName" }, "UserNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.Classes", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClassID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ScheduleDay")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<TimeOnly?>("ScheduleTime")
                        .HasColumnType("time");

                    b.HasKey("ClassId")
                        .HasName("PK__Classes__CB1927A02A82E515");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.Exercises", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ExerciseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DifficultyLevel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MuscleGroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ExerciseId")
                        .HasName("PK__Exercise__A074AD0F48FEF79A");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LanguageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageId"));

                    b.Property<string>("NameEn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NameEN");

                    b.Property<string>("NameSq")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NameSQ");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("LanguageId")
                        .HasName("PK__Languge__B938558BB0A1FDCF");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.Logs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Controller")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Error")
                        .HasColumnType("bit");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HttpMethod")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id")
                        .HasName("PK__Logs__3214EC07EB0E13EF");

                    b.HasIndex("UserId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.MembershipTypes", b =>
                {
                    b.Property<int>("MembershipTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MembershipTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MembershipTypeId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("DurationInDays")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("MembershipTypeId")
                        .HasName("PK__Membersh__F35A3E5965F0D49D");

                    b.ToTable("MembershipTypes");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.Memberships", b =>
                {
                    b.Property<int>("MembershipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MembershipID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MembershipId"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("MembershipTypeId")
                        .HasColumnType("int")
                        .HasColumnName("MembershipTypeID");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.HasKey("MembershipId")
                        .HasName("PK__Membersh__92A78599B1A25C56");

                    b.HasIndex("MembershipTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Memberships");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameSq")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameSr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Menu__3214EC076025AA71");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("ParentId");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.Payments", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("MembershipId")
                        .HasColumnType("int")
                        .HasColumnName("MembershipID");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TransactionID");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payments__9B556A589CE31E65");

                    b.HasIndex("MembershipId");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.RoleMenus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id")
                        .HasName("PK__RoleMenu__3214EC072959D2D2");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("MenuId");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleMenus");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ScheduleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.HasKey("ScheduleId")
                        .HasName("PK__Schedule__9C8A5B69AC6F8FB5");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.StatusType", b =>
                {
                    b.Property<int>("StatusTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusTypeId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InsertedFrom")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameSq")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameSr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdatedFrom")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("StatusTypeId")
                        .HasName("PK__StatusTy__A84F3C734D3330DE");

                    b.HasIndex("InsertedFrom");

                    b.HasIndex("UpdatedFrom");

                    b.ToTable("StatusType");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.Test", b =>
                {
                    b.Property<int>("TestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TestID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TestId"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("TestId")
                        .HasName("PK__Test__8CC33100F58A8C40");

                    b.ToTable("Test");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.UserClasses", b =>
                {
                    b.Property<int>("UserClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserClassID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserClassId"));

                    b.Property<DateOnly?>("AttendanceDate")
                        .HasColumnType("date");

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("ClassID");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.HasKey("UserClassId")
                        .HasName("PK__UserClas__151870CF1013FE44");

                    b.HasIndex("ClassId");

                    b.HasIndex("UserId");

                    b.ToTable("UserClasses");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.UsersSchedule", b =>
                {
                    b.Property<int>("UserScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserScheduleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserScheduleId"));

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int")
                        .HasColumnName("ScheduleID");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserID");

                    b.HasKey("UserScheduleId")
                        .HasName("PK__UsersSch__9659B0319F77889C");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersSchedule");
                });

            modelBuilder.Entity("AspNetUserRoles", b =>
                {
                    b.HasOne("IllyrianAPI.Data.General.AspNetRoles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IllyrianAPI.Data.General.AspNetUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.AspNetRoleClaims", b =>
                {
                    b.HasOne("IllyrianAPI.Data.General.AspNetRoles", "Role")
                        .WithMany("AspNetRoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.AspNetUserClaims", b =>
                {
                    b.HasOne("IllyrianAPI.Data.General.AspNetUsers", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.AspNetUserLogins", b =>
                {
                    b.HasOne("IllyrianAPI.Data.General.AspNetUsers", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.AspNetUserTokens", b =>
                {
                    b.HasOne("IllyrianAPI.Data.General.AspNetUsers", "User")
                        .WithMany("AspNetUserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.AspNetUsers", b =>
                {
                    b.HasOne("IllyrianAPI.Data.General.Language", "Language")
                        .WithMany("AspNetUsers")
                        .HasForeignKey("LanguageId")
                        .HasConstraintName("FK_AspNetUsers_Language");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.Logs", b =>
                {
                    b.HasOne("IllyrianAPI.Data.General.AspNetUsers", "User")
                        .WithMany("Logs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Logs_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.Memberships", b =>
                {
                    b.HasOne("IllyrianAPI.Data.General.MembershipTypes", "MembershipType")
                        .WithMany("Memberships")
                        .HasForeignKey("MembershipTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Membershi__Membe__73BA3083");

                    b.HasOne("IllyrianAPI.Data.General.AspNetUsers", "User")
                        .WithMany("Memberships")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Membershi__UserI__72C60C4A");

                    b.Navigation("MembershipType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.Menu", b =>
                {
                    b.HasOne("IllyrianAPI.Data.General.AspNetUsers", "CreatedByNavigation")
                        .WithMany("MenuCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK_Menu_CreatedBy");

                    b.HasOne("IllyrianAPI.Data.General.AspNetUsers", "ModifiedByNavigation")
                        .WithMany("MenuModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_Menu_ModifiedBy");

                    b.HasOne("IllyrianAPI.Data.General.Menu", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Menu_ParentId");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("ModifiedByNavigation");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.Payments", b =>
                {
                    b.HasOne("IllyrianAPI.Data.General.Memberships", "Membership")
                        .WithMany("Payments")
                        .HasForeignKey("MembershipId")
                        .IsRequired()
                        .HasConstraintName("FK__Payments__Member__778AC167");

                    b.HasOne("IllyrianAPI.Data.General.AspNetUsers", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Payments__UserID__76969D2E");

                    b.Navigation("Membership");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.RoleMenus", b =>
                {
                    b.HasOne("IllyrianAPI.Data.General.AspNetUsers", "CreatedByNavigation")
                        .WithMany("RoleMenusCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK_RoleMenus_CreatedBy");

                    b.HasOne("IllyrianAPI.Data.General.Menu", "Menu")
                        .WithMany("RoleMenus")
                        .HasForeignKey("MenuId")
                        .IsRequired()
                        .HasConstraintName("FK_RoleMenus_MenuId");

                    b.HasOne("IllyrianAPI.Data.General.AspNetUsers", "ModifiedByNavigation")
                        .WithMany("RoleMenusModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_RoleMenus_ModifiedBy");

                    b.HasOne("IllyrianAPI.Data.General.AspNetRoles", "Role")
                        .WithMany("RoleMenus")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_RoleMenus_RoleId");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Menu");

                    b.Navigation("ModifiedByNavigation");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.StatusType", b =>
                {
                    b.HasOne("IllyrianAPI.Data.General.AspNetUsers", "InsertedFromNavigation")
                        .WithMany("StatusTypeInsertedFromNavigation")
                        .HasForeignKey("InsertedFrom")
                        .IsRequired()
                        .HasConstraintName("FK_StatusType_InsertedFrom");

                    b.HasOne("IllyrianAPI.Data.General.AspNetUsers", "UpdatedFromNavigation")
                        .WithMany("StatusTypeUpdatedFromNavigation")
                        .HasForeignKey("UpdatedFrom")
                        .HasConstraintName("FK_StatusType_UpdatedFrom");

                    b.Navigation("InsertedFromNavigation");

                    b.Navigation("UpdatedFromNavigation");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.UserClasses", b =>
                {
                    b.HasOne("IllyrianAPI.Data.General.Classes", "Class")
                        .WithMany("UserClasses")
                        .HasForeignKey("ClassId")
                        .IsRequired()
                        .HasConstraintName("FK__UserClass__Class__7D439ABD");

                    b.HasOne("IllyrianAPI.Data.General.AspNetUsers", "User")
                        .WithMany("UserClasses")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserClass__UserI__7C4F7684");

                    b.Navigation("Class");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.UsersSchedule", b =>
                {
                    b.HasOne("IllyrianAPI.Data.General.Schedule", "Schedule")
                        .WithMany("UsersSchedule")
                        .HasForeignKey("ScheduleId")
                        .IsRequired()
                        .HasConstraintName("FK__UsersSche__Sched__31B762FC");

                    b.HasOne("IllyrianAPI.Data.General.AspNetUsers", "User")
                        .WithMany("UsersSchedule")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UsersSche__UserI__30C33EC3");

                    b.Navigation("Schedule");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.AspNetRoles", b =>
                {
                    b.Navigation("AspNetRoleClaims");

                    b.Navigation("RoleMenus");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.AspNetUsers", b =>
                {
                    b.Navigation("AspNetUserClaims");

                    b.Navigation("AspNetUserLogins");

                    b.Navigation("AspNetUserTokens");

                    b.Navigation("Logs");

                    b.Navigation("Memberships");

                    b.Navigation("MenuCreatedByNavigation");

                    b.Navigation("MenuModifiedByNavigation");

                    b.Navigation("Payments");

                    b.Navigation("RoleMenusCreatedByNavigation");

                    b.Navigation("RoleMenusModifiedByNavigation");

                    b.Navigation("StatusTypeInsertedFromNavigation");

                    b.Navigation("StatusTypeUpdatedFromNavigation");

                    b.Navigation("UserClasses");

                    b.Navigation("UsersSchedule");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.Classes", b =>
                {
                    b.Navigation("UserClasses");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.Language", b =>
                {
                    b.Navigation("AspNetUsers");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.MembershipTypes", b =>
                {
                    b.Navigation("Memberships");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.Memberships", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.Menu", b =>
                {
                    b.Navigation("InverseParent");

                    b.Navigation("RoleMenus");
                });

            modelBuilder.Entity("IllyrianAPI.Data.General.Schedule", b =>
                {
                    b.Navigation("UsersSchedule");
                });
#pragma warning restore 612, 618
        }
    }
}
